// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	search.proto

It has these top-level messages:
	Movie
	Results
	Result
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Movie struct {
	Title string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
}

func (m *Movie) Reset()                    { *m = Movie{} }
func (m *Movie) String() string            { return proto1.CompactTextString(m) }
func (*Movie) ProtoMessage()               {}
func (*Movie) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Movie) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type Results struct {
	Results []*Result `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (m *Results) Reset()                    { *m = Results{} }
func (m *Results) String() string            { return proto1.CompactTextString(m) }
func (*Results) ProtoMessage()               {}
func (*Results) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Results) GetResults() []*Result {
	if m != nil {
		return m.Results
	}
	return nil
}

type Result struct {
	VoteAverage  float32 `protobuf:"fixed32,1,opt,name=VoteAverage,json=vote_average" json:"VoteAverage,omitempty"`
	ID           int64   `protobuf:"varint,2,opt,name=ID,json=id" json:"ID,omitempty"`
	ReleaseDate  string  `protobuf:"bytes,3,opt,name=ReleaseDate,json=release_date" json:"ReleaseDate,omitempty"`
	BackdropPath string  `protobuf:"bytes,4,opt,name=BackdropPath,json=backdrop_path" json:"BackdropPath,omitempty"`
	Title        string  `protobuf:"bytes,5,opt,name=Title,json=title" json:"Title,omitempty"`
	PosterPath   string  `protobuf:"bytes,6,opt,name=PosterPath,json=poster_path" json:"PosterPath,omitempty"`
	Overview     string  `protobuf:"bytes,7,opt,name=Overview,json=overview" json:"Overview,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto1.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Result) GetVoteAverage() float32 {
	if m != nil {
		return m.VoteAverage
	}
	return 0
}

func (m *Result) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Result) GetReleaseDate() string {
	if m != nil {
		return m.ReleaseDate
	}
	return ""
}

func (m *Result) GetBackdropPath() string {
	if m != nil {
		return m.BackdropPath
	}
	return ""
}

func (m *Result) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Result) GetPosterPath() string {
	if m != nil {
		return m.PosterPath
	}
	return ""
}

func (m *Result) GetOverview() string {
	if m != nil {
		return m.Overview
	}
	return ""
}

func init() {
	proto1.RegisterType((*Movie)(nil), "proto.Movie")
	proto1.RegisterType((*Results)(nil), "proto.Results")
	proto1.RegisterType((*Result)(nil), "proto.Result")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Search service

type SearchClient interface {
	Search(ctx context.Context, in *Movie, opts ...grpc.CallOption) (*Results, error)
}

type searchClient struct {
	cc *grpc.ClientConn
}

func NewSearchClient(cc *grpc.ClientConn) SearchClient {
	return &searchClient{cc}
}

func (c *searchClient) Search(ctx context.Context, in *Movie, opts ...grpc.CallOption) (*Results, error) {
	out := new(Results)
	err := grpc.Invoke(ctx, "/proto.Search/Search", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Search service

type SearchServer interface {
	Search(context.Context, *Movie) (*Results, error)
}

func RegisterSearchServer(s *grpc.Server, srv SearchServer) {
	s.RegisterService(&_Search_serviceDesc, srv)
}

func _Search_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Movie)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Search/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServer).Search(ctx, req.(*Movie))
	}
	return interceptor(ctx, in, info, handler)
}

var _Search_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Search",
	HandlerType: (*SearchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Search",
			Handler:    _Search_Search_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "search.proto",
}

func init() { proto1.RegisterFile("search.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x50, 0xc1, 0x4a, 0xec, 0x40,
	0x10, 0x24, 0xc9, 0x4b, 0xb2, 0xaf, 0x93, 0xdd, 0xc3, 0xe0, 0x61, 0x58, 0x10, 0x63, 0x04, 0xcd,
	0x69, 0x91, 0xf8, 0x05, 0xca, 0x5e, 0x3c, 0x88, 0xcb, 0x28, 0x5e, 0xc3, 0xec, 0xa6, 0x31, 0xc1,
	0xc0, 0x84, 0x99, 0x36, 0xfe, 0xa9, 0xdf, 0x23, 0xdb, 0x13, 0x45, 0x4f, 0xd3, 0x55, 0xd5, 0xd5,
	0x4c, 0x15, 0xe4, 0x0e, 0xb5, 0x3d, 0x74, 0x9b, 0xd1, 0x1a, 0x32, 0x22, 0xe6, 0xa7, 0x3c, 0x85,
	0xf8, 0xc1, 0x4c, 0x3d, 0x8a, 0x13, 0x88, 0xa9, 0xa7, 0x01, 0x65, 0x50, 0x04, 0xd5, 0x7f, 0xe5,
	0x41, 0x59, 0x43, 0xaa, 0xd0, 0xbd, 0x0f, 0xe4, 0xc4, 0x15, 0xa4, 0xd6, 0x8f, 0x32, 0x28, 0xa2,
	0x2a, 0xab, 0x97, 0xfe, 0xd2, 0xc6, 0x2f, 0xa8, 0x6f, 0xb5, 0xfc, 0x0c, 0x20, 0xf1, 0x9c, 0x38,
	0x87, 0xec, 0xc5, 0x10, 0xde, 0x4e, 0x68, 0xf5, 0xab, 0x3f, 0x1d, 0xaa, 0x7c, 0x32, 0x84, 0x8d,
	0xf6, 0x9c, 0x58, 0x41, 0x78, 0xbf, 0x95, 0x61, 0x11, 0x54, 0x91, 0x0a, 0xfb, 0xf6, 0x68, 0x51,
	0x38, 0xa0, 0x76, 0xb8, 0xd5, 0x84, 0x32, 0xe2, 0xdf, 0xe4, 0xd6, 0x53, 0x4d, 0xab, 0x09, 0xc5,
	0x05, 0xe4, 0x77, 0xfa, 0xf0, 0xd6, 0x5a, 0x33, 0xee, 0x34, 0x75, 0xf2, 0x1f, 0xef, 0x2c, 0xf7,
	0x33, 0xd7, 0x8c, 0x9a, 0xba, 0x63, 0x9e, 0x67, 0xce, 0x13, 0xff, 0xca, 0x23, 0xce, 0x00, 0x76,
	0xc6, 0x11, 0x5a, 0x36, 0x26, 0x2c, 0x65, 0x23, 0x33, 0xde, 0xb6, 0x86, 0xc5, 0xe3, 0x84, 0x76,
	0xea, 0xf1, 0x43, 0xa6, 0x2c, 0x2f, 0xcc, 0x8c, 0xeb, 0x6b, 0x48, 0x9e, 0xb8, 0x42, 0x71, 0xf9,
	0x33, 0xe5, 0x73, 0x09, 0x5c, 0xe2, 0x7a, 0xf5, 0xa7, 0x12, 0xb7, 0x4f, 0x18, 0xde, 0x7c, 0x05,
	0x00, 0x00, 0xff, 0xff, 0x7e, 0x6c, 0xaa, 0x8f, 0x7b, 0x01, 0x00, 0x00,
}
